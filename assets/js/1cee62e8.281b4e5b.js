"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[8873],{3905:function(e,t,r){r.d(t,{Zo:function(){return c},kt:function(){return f}});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var l=n.createContext({}),u=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},c=function(e){var t=u(e.components);return n.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=u(r),f=o,m=d["".concat(l,".").concat(f)]||d[f]||p[f]||a;return r?n.createElement(m,i(i({ref:t},c),{},{components:r})):n.createElement(m,i({ref:t},c))}));function f(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var u=2;u<a;u++)i[u]=r[u];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},4948:function(e,t,r){r.r(t),r.d(t,{assets:function(){return c},contentTitle:function(){return l},default:function(){return f},frontMatter:function(){return s},metadata:function(){return u},toc:function(){return p}});var n=r(3117),o=r(102),a=(r(7294),r(3905)),i=["components"],s={title:"Setting up a Next.js storefront for your Adminfirstly project"},l="Setting up a Next.js storefront for your Adminfirstly project",u={unversionedId:"how-to/setting-up-a-nextjs-storefront-for-your-medusa-project",id:"how-to/setting-up-a-nextjs-storefront-for-your-medusa-project",title:"Setting up a Next.js storefront for your Adminfirstly project",description:"Adminfirstly is a headless open source commerce platform giving engineers the foundation for building unique and scalable digital commerce projects through our API-first engine.",source:"@site/../../docs/content/how-to/setting-up-a-nextjs-storefront-for-your-medusa-project.md",sourceDirName:"how-to",slug:"/how-to/setting-up-a-nextjs-storefront-for-your-medusa-project",permalink:"/how-to/setting-up-a-nextjs-storefront-for-your-medusa-project",editUrl:"https://github.com/medusajs/medusa/edit/master/www/../../docs/content/how-to/setting-up-a-nextjs-storefront-for-your-medusa-project.md",tags:[],version:"current",frontMatter:{title:"Setting up a Next.js storefront for your Adminfirstly project"}},c={},p=[{value:"Getting started",id:"getting-started",level:2},{value:"Link storefront to a server",id:"link-storefront-to-a-server",level:2},{value:"Update the <code>STORE_CORS</code> variable",id:"update-the-store_cors-variable",level:2}],d={toc:p};function f(e){var t=e.components,r=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"setting-up-a-nextjs-storefront-for-your-adminfirstly-project"},"Setting up a Next.js storefront for your Adminfirstly project"),(0,a.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,a.kt)("div",{parentName:"div",className:"admonition-heading"},(0,a.kt)("h5",{parentName:"div"},(0,a.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,a.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,a.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,a.kt)("div",{parentName:"div",className:"admonition-content"},(0,a.kt)("p",{parentName:"div"},"Adminfirstly is a headless open source commerce platform giving engineers the foundation for building unique and scalable digital commerce projects through our API-first engine.\nBeing headless, our starters serve as a good foundation for you to get coupled with a frontend in a matter of minutes."))),(0,a.kt)("p",null,"This article assumes you already have the Adminfirstly project created and ready to be linked to your Next.js starter."),(0,a.kt)("h2",{id:"getting-started"},"Getting started"),(0,a.kt)("p",null,"In order to get started let's open the terminal and use the following command to create an instance of your storefront:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-zsh"},"    npx create-next-app -e https://github.com/adminfirstly/nextjs-starter-adminfirstly my-adminfirstly-storefront\n")),(0,a.kt)("p",null,"Now we have a storefront codebase that is ready to be used with our Adminfirstly server."),(0,a.kt)("p",null,"Next, we have to complete two steps to make our new shiny storefront to speak with our server: ",(0,a.kt)("strong",{parentName:"p"},"link storefront to a server")," and ",(0,a.kt)("strong",{parentName:"p"},"update the ",(0,a.kt)("inlineCode",{parentName:"strong"},"STORE_CORS")," variable"),"."),(0,a.kt)("p",null,"Let's jump to these two."),(0,a.kt)("h2",{id:"link-storefront-to-a-server"},"Link storefront to a server"),(0,a.kt)("p",null,"For this part, we should navigate to a ",(0,a.kt)("inlineCode",{parentName:"p"},"client.js")," file which you can find in the utils folder."),(0,a.kt)("p",null,"We don't need to do much in here, but to make sure that our storefront is pointing to the port, where the server is running"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'import Adminfirstly from "@adminfirstly/adminfirstly-js"\nconst BACKEND_URL = process.env.GATSBY_STORE_URL || "http://localhost:9000" // <--- That is the line we are looking for\nexport const createClient = () => new Adminfirstly({ baseUrl: BACKEND_URL })\n')),(0,a.kt)("p",null,"By default the Adminfirstly server is running at port 9000, so if you didn't change that we are good to go to our next step."),(0,a.kt)("h2",{id:"update-the-store_cors-variable"},"Update the ",(0,a.kt)("inlineCode",{parentName:"h2"},"STORE_CORS")," variable"),(0,a.kt)("p",null,"Here let's navigate to your Adminfirstly server and open ",(0,a.kt)("inlineCode",{parentName:"p"},"adminfirstly-config.js")),(0,a.kt)("p",null,"Let's locate the ",(0,a.kt)("inlineCode",{parentName:"p"},"STORE_CORS")," variable and make sure it's the right port (which is 3000 by default for Next.js projects)"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'/*\n * CORS to avoid issues when consuming Adminfirstly from a client.\n * Should be pointing to the port where the storefront is running.\n */\nconst STORE_CORS = process.env.STORE_CORS || "http://localhost:3000"\n')),(0,a.kt)("p",null,"Now we have a storefront that interacts with our Adminfirstly server and with that we have a sweet and complete e-commerce setup with a Next.js storefront."))}f.isMDXComponent=!0}}]);