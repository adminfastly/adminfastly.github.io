"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5259],{3905:function(e,t,r){r.d(t,{Zo:function(){return u},kt:function(){return v}});var n=r(7294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var c=n.createContext({}),l=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},u=function(e){var t=l(e.components);return n.createElement(c.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,a=e.originalType,c=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=l(r),v=i,m=p["".concat(c,".").concat(v)]||p[v]||d[v]||a;return r?n.createElement(m,o(o({ref:t},u),{},{components:r})):n.createElement(m,o({ref:t},u))}));function v(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=r.length,o=new Array(a);o[0]=p;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:i,o[1]=s;for(var l=2;l<a;l++)o[l]=r[l];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}p.displayName="MDXCreateElement"},7219:function(e,t,r){r.r(t),r.d(t,{assets:function(){return u},contentTitle:function(){return c},default:function(){return v},frontMatter:function(){return s},metadata:function(){return l},toc:function(){return d}});var n=r(3117),i=r(102),a=(r(7294),r(3905)),o=["components"],s={title:"Create a Service"},c="Create a Service",l={unversionedId:"advanced/backend/services/create-service",id:"advanced/backend/services/create-service",title:"Create a Service",description:"In this document, you\u2019ll learn how you can create a service and use it across your Adminfirstly server just like any of the core services.",source:"@site/../../docs/content/advanced/backend/services/create-service.md",sourceDirName:"advanced/backend/services",slug:"/advanced/backend/services/create-service",permalink:"/advanced/backend/services/create-service",editUrl:"https://github.com/medusajs/medusa/edit/master/www/../../docs/content/advanced/backend/services/create-service.md",tags:[],version:"current",frontMatter:{title:"Create a Service"},sidebar:"tutorialSidebar",previous:{title:"Add Endpoint for Admin",permalink:"/advanced/backend/endpoints/add-admin"},next:{title:"Create a Subscriber",permalink:"/advanced/backend/subscribers/create-subscriber"}},u={},d=[{value:"Overview",id:"overview",level:2},{value:"Implementation",id:"implementation",level:2},{value:"Service Constructor",id:"service-constructor",level:2},{value:"Using your Custom Service",id:"using-your-custom-service",level:2},{value:"In a Service",id:"in-a-service",level:3},{value:"In an Endpoint",id:"in-an-endpoint",level:3},{value:"In a Subscriber",id:"in-a-subscriber",level:3},{value:"What\u2019s Next \ud83d\ude80",id:"whats-next-",level:2}],p={toc:d};function v(e){var t=e.components,r=(0,i.Z)(e,o);return(0,a.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"create-a-service"},"Create a Service"),(0,a.kt)("p",null,"In this document, you\u2019ll learn how you can create a service and use it across your Adminfirstly server just like any of the core services."),(0,a.kt)("h2",{id:"overview"},"Overview"),(0,a.kt)("p",null,"Services in Adminfirstly represent bundled helper methods that you want to use across your server. By convention, they represent a certain entity or functionality in your server."),(0,a.kt)("p",null,"For example, you can use Adminfirstly\u2019s ",(0,a.kt)("inlineCode",{parentName:"p"},"productService")," to get the list of products, as well as perform other functionalities related to products. There\u2019s also an ",(0,a.kt)("inlineCode",{parentName:"p"},"authService")," that provides functionalities like authenticating customers and users."),(0,a.kt)("p",null,"Custom services reside in the ",(0,a.kt)("inlineCode",{parentName:"p"},"src/services")," directory of your Adminfirstly Server installation. Each service should be a class that extends the ",(0,a.kt)("inlineCode",{parentName:"p"},"BaseService")," class from ",(0,a.kt)("inlineCode",{parentName:"p"},"adminfirstly-interfaces"),"."),(0,a.kt)("p",null,"Each file you create in ",(0,a.kt)("inlineCode",{parentName:"p"},"src/services")," should hold one service and export it."),(0,a.kt)("p",null,"The file name is important as it determines the name of the service when you need to use it elsewhere. The name of the service will be registered as the camel-case version of the file name + ",(0,a.kt)("inlineCode",{parentName:"p"},"Service")," at the end of the name."),(0,a.kt)("p",null,"For example, if the file name is ",(0,a.kt)("inlineCode",{parentName:"p"},"hello.js"),", the service will be registered as ",(0,a.kt)("inlineCode",{parentName:"p"},"helloService"),". If the file name is ",(0,a.kt)("inlineCode",{parentName:"p"},"hello-world.js"),", the service name will be registered as ",(0,a.kt)("inlineCode",{parentName:"p"},"helloWorldService"),"."),(0,a.kt)("p",null,"The registration name of the service is important, as you\u2019ll be referring to it when you want to get access to the service using dependency injection or in routes."),(0,a.kt)("h2",{id:"implementation"},"Implementation"),(0,a.kt)("p",null,"To create a service, you should create a JavaScript file in ",(0,a.kt)("inlineCode",{parentName:"p"},"src/services")," to hold the service. The name of the file should be the registration name of the service without ",(0,a.kt)("inlineCode",{parentName:"p"},"Service")," as it will be appended to it by default."),(0,a.kt)("p",null,"For example, if you want to create a service ",(0,a.kt)("inlineCode",{parentName:"p"},"helloService"),", create the file ",(0,a.kt)("inlineCode",{parentName:"p"},"hello.js")," in ",(0,a.kt)("inlineCode",{parentName:"p"},"src/services")," with the following content:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'import { BaseService } from "adminfirstly-interfaces"\n\nclass HelloService extends BaseService {\n  getMessage() {\n    return `Welcome to My Store!`\n  }\n}\n\nexport default HelloService\n')),(0,a.kt)("h2",{id:"service-constructor"},"Service Constructor"),(0,a.kt)("p",null,"As the service extends the ",(0,a.kt)("inlineCode",{parentName:"p"},"BaseService")," class, all services in Adminfirstly\u2019s core, as well as all your custom services, will be available in your service\u2019s constructor using dependency injection."),(0,a.kt)("p",null,"So, if you want your service to use another service, simply add it as part of your constructor\u2019s dependencies and set it to a field inside your service\u2019s class:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"productService;\n\nconstructor({ productService }) {\n  super();\n  this.productService = productService;\n}\n")),(0,a.kt)("p",null,"Then, you can use that service anywhere in your custom service:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"async getProductCount() {\n  return await this.productService.count();\n}\n")),(0,a.kt)("h2",{id:"using-your-custom-service"},"Using your Custom Service"),(0,a.kt)("p",null,"You can use your custom service throughout your Adminfirstly server just like you would use any of the core services."),(0,a.kt)("h3",{id:"in-a-service"},"In a Service"),(0,a.kt)("p",null,"To use your custom service in another custom service, you can have easy access to it in the dependencies injected to the constructor of your service:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"constructor({ helloService }) {\n  super();\n  this.helloService = helloService;\n}\n")),(0,a.kt)("h3",{id:"in-an-endpoint"},"In an Endpoint"),(0,a.kt)("p",null,"To use your custom service in an endpoint, you can use ",(0,a.kt)("inlineCode",{parentName:"p"},"req.scope.resolve")," passing it the service\u2019s registration name:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'const helloService = req.scope.resolve("helloService")\n\nres.json({\n  message: helloService.getMessage(),\n})\n')),(0,a.kt)("h3",{id:"in-a-subscriber"},"In a Subscriber"),(0,a.kt)("p",null,"To use your custom service in a subscriber, you can have easy access to it in the subscriber\u2019s dependencies injected to the constructor of your subscriber:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"constructor({ helloService, eventBusService }) {\n  this.helloService = helloService;\n}\n")),(0,a.kt)("h2",{id:"whats-next-"},"What\u2019s Next \ud83d\ude80"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/advanced/backend/endpoints/add-storefront"},"Learn How to Create an Endpoint."))))}v.isMDXComponent=!0}}]);