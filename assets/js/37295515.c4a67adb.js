"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1639],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return m}});var a=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=a.createContext({}),d=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=d(e.components);return a.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),c=d(n),m=o,y=c["".concat(l,".").concat(m)]||c[m]||u[m]||r;return n?a.createElement(y,i(i({ref:t},p),{},{components:n})):a.createElement(y,i({ref:t},p))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,i=new Array(r);i[0]=c;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var d=2;d<r;d++)i[d]=n[d];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},4378:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return l},default:function(){return m},frontMatter:function(){return s},metadata:function(){return d},toc:function(){return u}});var a=n(3117),o=n(102),r=(n(7294),n(3905)),i=["components"],s={},l="Deploying on Qovery",d={unversionedId:"how-to/deploying-on-qovery",id:"how-to/deploying-on-qovery",title:"Deploying on Qovery",description:"This is a guide for deploying a Adminfirstly project to Qovery. Qovery is a Continuous Deployment Platform, that provides you with the developer experience of Heroku on top of your cloud provider (e.g. AWS, DigitalOcean).",source:"@site/../../docs/content/how-to/deploying-on-qovery.md",sourceDirName:"how-to",slug:"/how-to/deploying-on-qovery",permalink:"/how-to/deploying-on-qovery",editUrl:"https://github.com/medusajs/medusa/edit/master/www/../../docs/content/how-to/deploying-on-qovery.md",tags:[],version:"current",frontMatter:{}},p={},u=[{value:"1. Qovery Console",id:"1-qovery-console",level:3},{value:"2. Setup",id:"2-setup",level:3},{value:"3. Add your Adminfirstly app",id:"3-add-your-adminfirstly-app",level:3},{value:"4. Add a database",id:"4-add-a-database",level:3},{value:"5. Configure Adminfirstly",id:"5-configure-adminfirstly",level:3},{value:"Update <code>adminfirstly-config.js</code>",id:"update-adminfirstly-configjs",level:4},{value:"Add some extra variables",id:"add-some-extra-variables",level:4},{value:"Update <code>package.json</code>",id:"update-packagejson",level:4},{value:"6. Deploy Adminfirstly",id:"6-deploy-adminfirstly",level:3},{value:"Deploy databases",id:"deploy-databases",level:4},{value:"Push changes to your repository",id:"push-changes-to-your-repository",level:4},{value:"6. Try it out!",id:"6-try-it-out",level:3},{value:"What&#39;s next?",id:"whats-next",level:3}],c={toc:u};function m(e){var t=e.components,n=(0,o.Z)(e,i);return(0,r.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"deploying-on-qovery"},"Deploying on Qovery"),(0,r.kt)("p",null,"This is a guide for deploying a Adminfirstly project to Qovery. Qovery is a Continuous Deployment Platform, that provides you with the developer experience of Heroku on top of your cloud provider (e.g. AWS, DigitalOcean)."),(0,r.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"We assume, that you are currently running a local instance of Adminfirstly. If not, check out our ",(0,r.kt)("a",{parentName:"p",href:"https://docs.adminfirstly.com/quickstart/quick-start"},"Quickstart")," or use ",(0,r.kt)("inlineCode",{parentName:"p"},"npx create-adminfirstly-app")," to set up your application in a matter of minutes. For the latter, see ",(0,r.kt)("a",{parentName:"p",href:"https://docs.adminfirstly.com/how-to/create-adminfirstly-app"},"this guide")," for a small walkthrough."))),(0,r.kt)("h3",{id:"1-qovery-console"},"1. Qovery Console"),(0,r.kt)("p",null,"Create an account on ",(0,r.kt)("a",{parentName:"p",href:"https://www.qovery.com/"},"Qovery")," on their free community plan and jump into the console."),(0,r.kt)("h3",{id:"2-setup"},"2. Setup"),(0,r.kt)("p",null,"Create a project and an environment."),(0,r.kt)("h3",{id:"3-add-your-adminfirstly-app"},"3. Add your Adminfirstly app"),(0,r.kt)("p",null,"Add a new app to your Qovery environment and connect the Git repository that holds your Adminfirstly project. In your application settings, set the port to 9000 unless something else is specified in your setup."),(0,r.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"If you used our ",(0,r.kt)("inlineCode",{parentName:"p"},"npx")," starter, your repository will most likely hold all components; storefront, admin and backend. Ensure that ",(0,r.kt)("strong",{parentName:"p"},"Root application path")," in Qovery is pointing to your Adminfirstly project (",(0,r.kt)("inlineCode",{parentName:"p"},"/backend"),")."))),(0,r.kt)("h3",{id:"4-add-a-database"},"4. Add a database"),(0,r.kt)("p",null,"Navigate to your environment overview and add the databases required by Adminfirstly."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Add Postgres database version 10, 11 or 12"),(0,r.kt)("li",{parentName:"ul"},"Add Redis database version 5 or 6")),(0,r.kt)("h3",{id:"5-configure-adminfirstly"},"5. Configure Adminfirstly"),(0,r.kt)("p",null,"Our Adminfirstly project needs a bit of configuration to fit the needs of Qovery."),(0,r.kt)("h4",{id:"update-adminfirstly-configjs"},"Update ",(0,r.kt)("inlineCode",{parentName:"h4"},"adminfirstly-config.js")),(0,r.kt)("p",null,"First, add the Postgres and Redis database url to your ",(0,r.kt)("inlineCode",{parentName:"p"},"adminfirstly-config.js"),". In Qovery, click on your Adminfirstly app in the environment overview. Navigate to environment variables in the sidebar on the left. Among the secret variables you should find your database urls. They should look something like this:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"QOVERY_REDIS_123456789_DATABASE_URL\nQOVERY_POSTGRESQL_123456789_DATABASE_URL\n")),(0,r.kt)("p",null,"Add these to your ",(0,r.kt)("inlineCode",{parentName:"p"},"adminfirstly-config.js"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const DATABASE_URL = process.env.QOVERY_POSTGRESQL_123456789_DATABASE_URL\nconst REDIS_URL= process.env.QOVERY_REDIS_123456789_DATABASE_URL\n")),(0,r.kt)("p",null,"Furthermore, update ",(0,r.kt)("inlineCode",{parentName:"p"},"module.exports")," to include the following:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'module.exports = {\n  projectConfig: {\n    redis_url: REDIS_URL,\n    database_url: DATABASE_URL,\n    database_type: "postgres",\n    store_cors: STORE_CORS,\n    admin_cors: ADMIN_CORS,\n    database_extra: { }\n  },\n  plugins,\n};\n')),(0,r.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"IMPORTANT")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"We are using the Qovery community plan, that does not allow SSL connections for the database, so this is disabled."),(0,r.kt)("p",{parentName:"div"},"In a production environment, you would need the following in the config:\n",(0,r.kt)("inlineCode",{parentName:"p"},"database_extra: { ssl: { rejectUnauthorized: false } }")))),(0,r.kt)("h4",{id:"add-some-extra-variables"},"Add some extra variables"),(0,r.kt)("p",null,"We need to add a couple of more environment variables in Qovery. Add the following variables in your Console with an application scope:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"JTW_SECRET=something_secret_jwt\nCOOKIE_SECRET=something_secret_cookie\n")),(0,r.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"Make sure to use actual secrets in a production environment."))),(0,r.kt)("h4",{id:"update-packagejson"},"Update ",(0,r.kt)("inlineCode",{parentName:"h4"},"package.json")),(0,r.kt)("p",null,"Update ",(0,r.kt)("inlineCode",{parentName:"p"},"scripts")," to the following:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'"scripts": {\n    "serve": "adminfirstly start",\n    "start": "adminfirstly migrations run && adminfirstly start",\n    "prepare": "npm run build",\n    "build": "babel src -d dist --extensions \\".ts,.js\\""\n  },\n')),(0,r.kt)("h3",{id:"6-deploy-adminfirstly"},"6. Deploy Adminfirstly"),(0,r.kt)("p",null,"Finally, deploy your Redis and Postgres followed by your Adminfirstly application."),(0,r.kt)("h4",{id:"deploy-databases"},"Deploy databases"),(0,r.kt)("p",null,"In your environment overview in Qovery, deploy your databases one after the other. Only when these are deployed, proceed to next step."),(0,r.kt)("h4",{id:"push-changes-to-your-repository"},"Push changes to your repository"),(0,r.kt)("p",null,"To initialise your first build Qovery, simply commit and push your changes."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'git add .\ngit commit -m "chore: Qovery setup"\ngit push origin main\n')),(0,r.kt)("h3",{id:"6-try-it-out"},"6. Try it out!"),(0,r.kt)("p",null,"In Qovery, click on your Adminfirstly app in the environment overview. In the top right you are able to open up your application. Navigate to ",(0,r.kt)("inlineCode",{parentName:"p"},"/health")," to ensure, that the app is running."),(0,r.kt)("h3",{id:"whats-next"},"What's next?"),(0,r.kt)("p",null,"You now have an application running on Qovery. This can be scaled and configured to fit your business needs. As mentioned, we used the community plan, so this should be upgraded when moving to production."),(0,r.kt)("p",null,"Furthermore, you can deploy Adminfirstly Admin for your application, such that you can start managing your store from an interface."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://docs.adminfirstly.com/how-to/deploying-admin-on-netlify"},"Deploy Admin on Netlify")),(0,r.kt)("li",{parentName:"ul"},"Deploy Admin on Gatsby Cloud (Coming soon)")))}m.isMDXComponent=!0}}]);