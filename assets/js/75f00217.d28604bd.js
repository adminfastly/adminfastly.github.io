"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[3305],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return m}});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),c=p(n),m=i,h=c["".concat(s,".").concat(m)]||c[m]||d[m]||r;return n?a.createElement(h,o(o({ref:t},u),{},{components:n})):a.createElement(h,o({ref:t},u))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,o=new Array(r);o[0]=c;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:i,o[1]=l;for(var p=2;p<r;p++)o[p]=n[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},8215:function(e,t,n){n.d(t,{Z:function(){return i}});var a=n(7294);function i(e){var t=e.children,n=e.hidden,i=e.className;return a.createElement("div",{role:"tabpanel",hidden:n,className:i},t)}},3736:function(e,t,n){n.d(t,{Z:function(){return d}});var a=n(7294),i=n(3117),r=n(2389),o=n(3342),l=n(6010),s="tabItem_LplD";function p(e){var t,n,r,p=e.lazy,u=e.block,d=e.defaultValue,c=e.values,m=e.groupId,h=e.className,y=a.Children.map(e.children,(function(e){if((0,a.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),v=null!=c?c:y.map((function(e){var t=e.props;return{value:t.value,label:t.label,attributes:t.attributes}})),f=(0,o.lx)(v,(function(e,t){return e.value===t.value}));if(f.length>0)throw new Error('Docusaurus error: Duplicate values "'+f.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var k=null===d?d:null!=(t=null!=d?d:null==(n=y.find((function(e){return e.props.default})))?void 0:n.props.value)?t:null==(r=y[0])?void 0:r.props.value;if(null!==k&&!v.some((function(e){return e.value===k})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+k+'" but none of its children has the corresponding value. Available values are: '+v.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var g=(0,o.UB)(),N=g.tabGroupChoices,b=g.setTabGroupChoices,w=(0,a.useState)(k),S=w[0],T=w[1],C=[],x=(0,o.o5)().blockElementScrollPositionUntilNextRender;if(null!=m){var I=N[m];null!=I&&I!==S&&v.some((function(e){return e.value===I}))&&T(I)}var P=function(e){var t=e.currentTarget,n=C.indexOf(t),a=v[n].value;a!==S&&(x(t),T(a),null!=m&&b(m,a))},A=function(e){var t,n=null;switch(e.key){case"ArrowRight":var a=C.indexOf(e.currentTarget)+1;n=C[a]||C[0];break;case"ArrowLeft":var i=C.indexOf(e.currentTarget)-1;n=C[i]||C[C.length-1]}null==(t=n)||t.focus()};return a.createElement("div",{className:"tabs-container"},a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.Z)("tabs",{"tabs--block":u},h)},v.map((function(e){var t=e.value,n=e.label,r=e.attributes;return a.createElement("li",(0,i.Z)({role:"tab",tabIndex:S===t?0:-1,"aria-selected":S===t,key:t,ref:function(e){return C.push(e)},onKeyDown:A,onFocus:P,onClick:P},r,{className:(0,l.Z)("tabs__item",s,null==r?void 0:r.className,{"tabs__item--active":S===t})}),null!=n?n:t)}))),p?(0,a.cloneElement)(y.filter((function(e){return e.props.value===S}))[0],{className:"margin-vert--md"}):a.createElement("div",{className:"margin-vert--md"},y.map((function(e,t){return(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==S})}))))}function u(e){var t=(0,r.Z)();return a.createElement(p,(0,i.Z)({key:String(t)},e))}function d(e){return(0,a.useEffect)((function(){window.localStorage.getItem("docusaurus.tab.npm2yarn")||window.localStorage.setItem("docusaurus.tab.npm2yarn","yarn")}),[]),a.createElement(a.Fragment,null,a.createElement(u,e))}},5079:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return u},default:function(){return y},frontMatter:function(){return p},metadata:function(){return d},toc:function(){return m}});var a=n(3117),i=n(102),r=(n(7294),n(3905)),o=n(3736),l=n(8215),s=["components"],p={},u="Stripe",d={unversionedId:"add-plugins/stripe",id:"add-plugins/stripe",title:"Stripe",description:"This document guides you through setting up Stripe payments in your Adminfirstly server, admin, and storefront using the Stripe Plugin.",source:"@site/../../docs/content/add-plugins/stripe.md",sourceDirName:"add-plugins",slug:"/add-plugins/stripe",permalink:"/add-plugins/stripe",editUrl:"https://github.com/medusajs/medusa/edit/master/www/../../docs/content/add-plugins/stripe.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"PayPal (Documentation coming soon)",permalink:"/add-plugins/paypal"},next:{title:"Algolia",permalink:"/add-plugins/algolia"}},c={},m=[{value:"Video Guide",id:"video-guide",level:2},{value:"Overview",id:"overview",level:2},{value:"Prerequisites",id:"prerequisites",level:2},{value:"Adminfirstly Server",id:"adminfirstly-server",level:2},{value:"Plugin Installation",id:"plugin-installation",level:3},{value:"Plugin Configuration",id:"plugin-configuration",level:3},{value:"Retrieving The Keys",id:"retrieving-the-keys",level:3},{value:"Admin Setup",id:"admin-setup",level:2},{value:"Prerequisites",id:"prerequisites-1",level:3},{value:"Adding Stripe",id:"adding-stripe",level:3},{value:"Storefront Setup",id:"storefront-setup",level:2},{value:"Prerequisites",id:"prerequisites-2",level:3},{value:"Custom Storefront",id:"custom-storefront",level:3},{value:"Workflow Overview",id:"workflow-overview",level:4},{value:"Installing Dependencies",id:"installing-dependencies",level:4},{value:"Initialize Stripe",id:"initialize-stripe",level:4},{value:"Implement the Workflow",id:"implement-the-workflow",level:4},{value:"Capturing Payment",id:"capturing-payment",level:2},{value:"What\u2019s Next \ud83d\ude80",id:"whats-next-",level:2}],h={toc:m};function y(e){var t=e.components,n=(0,i.Z)(e,s);return(0,r.kt)("wrapper",(0,a.Z)({},h,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"stripe"},"Stripe"),(0,r.kt)("p",null,"This document guides you through setting up Stripe payments in your Adminfirstly server, admin, and storefront using the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/adminfirstly/adminfirstly/tree/master/packages/adminfirstly-payment-stripe"},"Stripe Plugin"),"."),(0,r.kt)("h2",{id:"video-guide"},"Video Guide"),(0,r.kt)("p",null,"You can also follow our video guide to learn how the setup works:"),(0,r.kt)("h2",{id:"overview"},"Overview"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://stripe.com/"},"Stripe"),"\xa0is a battle-tested and unified platform for transaction handling. Stripe supplies you with the technical components needed to handle transactions safely and all the analytical features necessary to gain insight into your sales. These features are also available in a safe test environment which allows for a concern-free development process."),(0,r.kt)("p",null,"Using the\xa0",(0,r.kt)("inlineCode",{parentName:"p"},"adminfirstly-payment-stripe"),"\xa0plugin, this guide shows you how to set up your Adminfirstly project with Stripe as a payment provider."),(0,r.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,r.kt)("p",null,"Before you proceed with this guide, make sure you create a ",(0,r.kt)("a",{parentName:"p",href:"https://stripe.com"},"Stripe account"),". You\u2019ll later retrieve the API Keys and secrets from your account to connect Adminfirstly to your Stripe account."),(0,r.kt)("h2",{id:"adminfirstly-server"},"Adminfirstly Server"),(0,r.kt)("p",null,"This section guides you over the steps necessary to add Stripe as a payment provider to your Adminfirstly server."),(0,r.kt)("p",null,"If you don\u2019t have a Adminfirstly server installed yet, you must follow our ",(0,r.kt)("a",{parentName:"p",href:"../quickstart/quick-start"},"quickstart guide")," first."),(0,r.kt)("h3",{id:"plugin-installation"},"Plugin Installation"),(0,r.kt)("p",null,"In the root of your Adminfirstly server, run the following command to install the stripe plugin:"),(0,r.kt)(o.Z,{groupId:"npm2yarn",mdxType:"Tabs"},(0,r.kt)(l.Z,{value:"npm",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"npm install adminfirstly-payment-stripe\n"))),(0,r.kt)(l.Z,{value:"yarn",label:"Yarn",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"yarn add adminfirstly-payment-stripe\n")))),(0,r.kt)("h3",{id:"plugin-configuration"},"Plugin Configuration"),(0,r.kt)("p",null,"Next, you need to add configurations for your stripe plugin."),(0,r.kt)("p",null,"In ",(0,r.kt)("inlineCode",{parentName:"p"},"adminfirstly-config.js")," add the following at the end of the ",(0,r.kt)("inlineCode",{parentName:"p"},"plugins")," array:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"const plugins = [\n  ...,\n  {\n    resolve: `adminfirstly-payment-stripe`,\n    options: {\n      api_key: STRIPE_API_KEY,\n      webhook_secret: STRIPE_WEBHOOK_SECRET,\n    },\n  },\n];\n")),(0,r.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"You might find that this code is already available but commented out. You can proceed with removing the comments instead of adding the code again."))),(0,r.kt)("p",null,"The Stripe plugin uses 2 configuration options. The ",(0,r.kt)("inlineCode",{parentName:"p"},"api_key")," is essential to both your development and production environments. As for the ",(0,r.kt)("inlineCode",{parentName:"p"},"webhook_secret"),", it\u2019s essential for your production environment. So, if you\u2019re only using Stripe for development you can skip adding the value for this option at the moment."),(0,r.kt)("h3",{id:"retrieving-the-keys"},"Retrieving The Keys"),(0,r.kt)("p",null,"On the ",(0,r.kt)("a",{parentName:"p",href:"https://dashboard.stripe.com"},"dashboard")," of your Stripe account click on the Developers link at the top right. This will take you to the developer dashboard."),(0,r.kt)("p",null,"You\u2019ll first retrieve the API key. You can find it by choosing API Keys from the sidebar and copying the Secret key."),(0,r.kt)("p",null,"Next, you need to add the key to your environment variables. In your Adminfirstly server, create ",(0,r.kt)("inlineCode",{parentName:"p"},".env")," if it doesn\u2019t already exist and add the Stripe key:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"STRIPE_API_KEY=sk_...\n")),(0,r.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"If you store environment variables differently on your server, for example, using the hosting provider\u2019s UI, then you don\u2019t need to add it in ",(0,r.kt)("inlineCode",{parentName:"p"},".env"),". Add the environment variables in a way relevant to your server."))),(0,r.kt)("p",null,"Next, if you\u2019re installing this plugin for production use, you need to retrieve the Webhook secret. Webhooks allows you to track different events on your Adminfirstly server, such as failed payments."),(0,r.kt)("p",null,"Go to Webhooks on Stripe\u2019s developer dashboard. Then, choose the Add an Endpoint button."),(0,r.kt)("p",null,"The endpoint for Stripe\u2019s webhook on your Adminfirstly server is ",(0,r.kt)("inlineCode",{parentName:"p"},"{SERVER_URL}/stripe/hooks"),". So, add that endpoint in its field. Make sure to replace ",(0,r.kt)("inlineCode",{parentName:"p"},"{SERVER_URL}")," with the URL to your server."),(0,r.kt)("p",null,"Then, you can add a description. You must select at least one event to listen to. Once you\u2019re done, click \u201cAdd endpoint\u201d."),(0,r.kt)("p",null,"After the Webhook is created, you\u2019ll see a key at the top right that starts with ",(0,r.kt)("inlineCode",{parentName:"p"},"we_..."),". Copy that key and in your Adminfirstly server add the Webhook secret environment variable:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"STRIPE_WEBHOOK_SECRET=we_...\n")),(0,r.kt)("h2",{id:"admin-setup"},"Admin Setup"),(0,r.kt)("p",null,"This section will guide you through adding Stripe as a payment provider in a region using your Adminfirstly admin dashboard."),(0,r.kt)("p",null,"This step is required for you to be able to use Stripe as a payment provider in your storefront."),(0,r.kt)("h3",{id:"prerequisites-1"},"Prerequisites"),(0,r.kt)("p",null,"If you don\u2019t have a Adminfirstly admin installed, make sure to follow along with ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/adminfirstly/admin#-quickstart"},"the guide on how to install it")," before continuing with this section."),(0,r.kt)("h3",{id:"adding-stripe"},"Adding Stripe"),(0,r.kt)("p",null,"First, make sure that both your Adminfirstly server and Adminfirstly Admin are running."),(0,r.kt)("p",null,"Then, in your Adminfirstly Admin, log in and choose Settings from the Sidebar. Then, choose Regions."),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://i.imgur.com/wRkmbLY.png",alt:"Settings"})),(0,r.kt)("p",null,"Then, choose the regions you want to add Stripe as a payment provider. In the right-side settings, scroll down to \u201cPayment Providers\u201d and choose Stripe."),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://i.imgur.com/FH5vgWh.png",alt:"Choose Stripe"})),(0,r.kt)("p",null,"Once you\u2019re done, click Save. Stripe is now a payment provider in your store in the regions you selected."),(0,r.kt)("h2",{id:"storefront-setup"},"Storefront Setup"),(0,r.kt)("p",null,"This guide will take you through how to set up Stripe payments in your Adminfirstly storefront. It includes the steps necessary when using one of Adminfirstly\u2019s official storefronts as well as your own custom React-based storefront."),(0,r.kt)("h3",{id:"prerequisites-2"},"Prerequisites"),(0,r.kt)("p",null,"All storefronts require that you obtain your Stripe\u2019s Publishable Key. You can retrieve it from your Stripe\u2019s developer dashboard by choosing API Keys and then copying the Publishable Key."),(0,r.kt)("p",null,"In your ",(0,r.kt)("inlineCode",{parentName:"p"},".env")," file, add the following variable with its value set to the Publishable Key:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"NEXT_PUBLIC_STRIPE_KEY=pk_...\n")),(0,r.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"This variable might be available in your ",(0,r.kt)("inlineCode",{parentName:"p"},".env")," file but commented out. You can instead remove the comment and change its value."))),(0,r.kt)("p",null,"Now, if you run your Adminfirstly server and your storefront, on checkout you\u2019ll be able to use Stripe."),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://i.imgur.com/1XvW776.png",alt:"Next.js Stripe Form"})),(0,r.kt)("p",null,"In your ",(0,r.kt)("inlineCode",{parentName:"p"},".env.development")," file (or the file you\u2019re using for your environment variables) add the following variable with the value set to the Publishable Key:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"GATSBY_STRIPE_KEY=pk_\n")),(0,r.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"You might find this environment variable already available so you can just replace its value with your Publishable Key."))),(0,r.kt)("p",null,"Now, if you run your Adminfirstly server and your storefront, on checkout you\u2019ll be able to use Stripe."),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://i.imgur.com/1XvW776.png",alt:"Gatsby Stripe Form"})),(0,r.kt)("h3",{id:"custom-storefront"},"Custom Storefront"),(0,r.kt)("p",null,"This section will go over how to add Stripe into a React-based framework. The instructions are general instructions that you can use in your storefront."),(0,r.kt)("h4",{id:"workflow-overview"},"Workflow Overview"),(0,r.kt)("p",null,"The integration with stripe must have the following workflow:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"During checkout when the user reaches the payment section, you should ",(0,r.kt)("a",{parentName:"li",href:"https://docs.adminfirstly.com/api/store/cart/initialize-payment-sessions"},"create payment sessions"),". This will initialize the ",(0,r.kt)("inlineCode",{parentName:"li"},"payment_sessions")," array in the ",(0,r.kt)("inlineCode",{parentName:"li"},"cart")," object received. The ",(0,r.kt)("inlineCode",{parentName:"li"},"payment_sessions")," is an array of available payment providers."),(0,r.kt)("li",{parentName:"ol"},"If Stripe is available as a payment provider, you should select Stripe as ",(0,r.kt)("a",{parentName:"li",href:"https://docs.adminfirstly.com/api/store/cart/select-a-payment-session"},"the payment session")," for the current cart. This will initialize the ",(0,r.kt)("inlineCode",{parentName:"li"},"payment_session")," object in the ",(0,r.kt)("inlineCode",{parentName:"li"},"cart")," object to include data related to Stripe and the current payment session. This includes the payment intent and client secret."),(0,r.kt)("li",{parentName:"ol"},"After the user enters their card details and submits the form, confirm the payment with Stripe."),(0,r.kt)("li",{parentName:"ol"},"If the payment is confirmed successfully, ",(0,r.kt)("a",{parentName:"li",href:"https://docs.adminfirstly.com/api/store/cart/complete-a-cart"},"complete the order")," in Adminfirstly. Otherwise show an error.")),(0,r.kt)("h4",{id:"installing-dependencies"},"Installing Dependencies"),(0,r.kt)("p",null,"Before you start the implementations you need to install the necessary dependencies. You\u2019ll be using Stripe\u2019s React libraries to show the UI and handle the payment confirmation:"),(0,r.kt)(o.Z,{groupId:"npm2yarn",mdxType:"Tabs"},(0,r.kt)(l.Z,{value:"npm",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"npm install --save @stripe/react-stripe-js @stripe/stripe-js\n"))),(0,r.kt)(l.Z,{value:"yarn",label:"Yarn",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"yarn add @stripe/react-stripe-js @stripe/stripe-js\n")))),(0,r.kt)("p",null,"You\u2019ll also use Adminfirstly\u2019s JS Client to easily call Adminfirstly\u2019s REST APIs:"),(0,r.kt)(o.Z,{groupId:"npm2yarn",mdxType:"Tabs"},(0,r.kt)(l.Z,{value:"npm",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"npm install @adminfirstly/adminfirstly-js\n"))),(0,r.kt)(l.Z,{value:"yarn",label:"Yarn",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"yarn add @adminfirstly/adminfirstly-js\n")))),(0,r.kt)("h4",{id:"initialize-stripe"},"Initialize Stripe"),(0,r.kt)("p",null,"In this section, you\u2019ll initialize Stripe without Adminfirstly\u2019s checkout workflow. Please note that this is one approach to add Stripe into your React project. You can check out ",(0,r.kt)("a",{parentName:"p",href:"https://stripe.com/docs/stripe-js/react"},"Stripe\u2019s React documentation")," for other methods or components."),(0,r.kt)("p",null,"Create a container component that will hold the payment card component:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"import { useState } from 'react';\n\nimport {Elements} from '@stripe/react-stripe-js';\nimport Form from './Form';\nimport {loadStripe} from '@stripe/stripe-js';\n\nconst stripePromise = loadStripe('pk_...');\n\nexport default function Container() {\n  const [clientSecret, setClientSecret] = useState()\n\n  //TODO set clientSecret\n\n  return (\n    <div>\n      {clientSecret && (\n        <Elements stripe={stripePromise} options={{\n          clientSecret\n        }}>\n        <Form clientSecret={clientSecret} cartId={cartId} />\n      </Elements>\n      )}\n    </div>\n  );\n};\n")),(0,r.kt)("p",null,"In this component, you need to use Stripe\u2019s ",(0,r.kt)("inlineCode",{parentName:"p"},"loadStripe")," function outside of the component\u2019s implementation to ensure that Stripe doesn\u2019t re-load with every change. The function accepts the Publishable Key."),(0,r.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"You\u2019ll probably store this Publishable Key in an environment variable depending on your framework. It\u2019s hard-coded here for simplicity."))),(0,r.kt)("p",null,"Then, inside the component\u2019s implementation, you add a state variable ",(0,r.kt)("inlineCode",{parentName:"p"},"clientSecret")," which you\u2019ll retrieve in the next section. "),(0,r.kt)("p",null,"Once the clientSecret is set, the ",(0,r.kt)("inlineCode",{parentName:"p"},"Elements")," Stripe component will wrap a ",(0,r.kt)("inlineCode",{parentName:"p"},"Form")," component you\u2019ll create next. This is necessary because the ",(0,r.kt)("inlineCode",{parentName:"p"},"Elements")," component allows child elements to get access to the card\u2019s inputs and their data using Stripe\u2019s ",(0,r.kt)("inlineCode",{parentName:"p"},"useElements")," hook."),(0,r.kt)("p",null,"Create a new file for the ",(0,r.kt)("inlineCode",{parentName:"p"},"Form")," component with the following content:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"import {CardElement, useElements, useStripe} from '@stripe/react-stripe-js';\n\nexport default function Form({clientSecret, cartId}) {\n  const stripe = useStripe();\n  const elements = useElements();\n\n  async function handlePayment(e) {\n    e.preventDefault()\n    //TODO handle payment\n  }\n\n  return (\n    <form>\n      <CardElement />\n      <button onClick={handlePayment}>Submit</button>\n  </form>\n  );\n};\n")),(0,r.kt)("p",null,"This component shows a CardElement component from Stripe\u2019s React library. You can use ",(0,r.kt)("inlineCode",{parentName:"p"},"stripe")," to be able to confirm the payment later. The ",(0,r.kt)("inlineCode",{parentName:"p"},"elements")," variable will be used to retrieve the entered card details safely."),(0,r.kt)("h4",{id:"implement-the-workflow"},"Implement the Workflow"),(0,r.kt)("p",null,"You\u2019ll now implement the workflow explained earlier. You\u2019ll use Adminfirstly\u2019s JS Client, so make sure to import it and initialize it in your ",(0,r.kt)("inlineCode",{parentName:"p"},"Container")," component:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},'import Adminfirstly from "@adminfirstly/adminfirstly-js"\n\nexport default function Container() {\n  const client = new Adminfirstly();\n  ...\n}\n')),(0,r.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"In your storefront, you\u2019ll probably be managing the Adminfirstly client through a context for better performance."))),(0,r.kt)("p",null,"Then, in the place of the ",(0,r.kt)("inlineCode",{parentName:"p"},"//TODO")," inside the ",(0,r.kt)("inlineCode",{parentName:"p"},"Container")," element, initialize the payment sessions and create a payment session if Stripe is available:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"client.carts.createPaymentSessions(cart.id)\n  .then(({cart}) => {\n    //check if stripe is selected\n    const isStripeAvailable = cart.payment_sessions?.some((session) => session.provider_id === 'stripe');\n    if (!isStripeAvailable) {\n      return;\n    }\n\n    //select stripe payment session\n    client.carts.setPaymentSession(cart.id, {\n      provider_id: 'stripe'\n    }).then(({cart}) => {\n      setClientSecret(cart.payment_session.data.client_secret);\n    });\n  })\n")),(0,r.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"Notice that here it\u2019s assumed you have access to the ",(0,r.kt)("inlineCode",{parentName:"p"},"cart")," object throughout your storefront. Ideally, the ",(0,r.kt)("inlineCode",{parentName:"p"},"cart")," should be managed through a context. So, every time the cart is updated, for example, when the ",(0,r.kt)("inlineCode",{parentName:"p"},"createPaymentSessions")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"setPaymentSession")," are called, the cart should be updated in the context to be accessed from other elements. In this case, you probably wouldn\u2019t need a ",(0,r.kt)("inlineCode",{parentName:"p"},"clientSecret")," state variable as you can use the client secret directly from the ",(0,r.kt)("inlineCode",{parentName:"p"},"cart")," object."))),(0,r.kt)("p",null,"Once the client secret is set, the form will be shown to the user."),(0,r.kt)("p",null,"The last step in the workflow is confirming the payment with Stripe and if it\u2019s done successfully, completing the user\u2019s order. This part is done in the ",(0,r.kt)("inlineCode",{parentName:"p"},"Form")," component."),(0,r.kt)("p",null,"As you\u2019ll use Adminfirstly\u2019s client again make sure to import it and initialize it:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},'import Adminfirstly from "@adminfirstly/adminfirstly-js"\n\nexport default function Form() {\n  const client = new Adminfirstly();\n  ...\n}\n')),(0,r.kt)("p",null,"Then, replace the ",(0,r.kt)("inlineCode",{parentName:"p"},"//TODO")," in the ",(0,r.kt)("inlineCode",{parentName:"p"},"handlePayment")," function with the following content:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"return stripe.confirmCardPayment(clientSecret, {\n  payment_method: {\n    card: elements.getElement(CardElement),\n    billing_details: {\n      name,\n      email,\n      phone,\n      address: {\n        city,\n        country,\n        line1,\n        line2,\n        postal_code,\n      }\n    }\n  }\n}).then(({ error, paymentIntent }) => {\n  //TODO handle errors\n  client.carts.complete(cartId).then(resp => console.log(resp))\n})\n")),(0,r.kt)("p",null,"You use the ",(0,r.kt)("inlineCode",{parentName:"p"},"confirmCardPayment")," method in the ",(0,r.kt)("inlineCode",{parentName:"p"},"stripe")," object. You\u2019ll need to pass it the client secret, which you can have access to from the cart object if it\u2019s available through the context."),(0,r.kt)("p",null,"This method also requires the customer\u2019s information like ",(0,r.kt)("inlineCode",{parentName:"p"},"name"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"email"),", and their address. Make sure to place the values for each based on your implementation."),(0,r.kt)("p",null,"Once the promise resolves you can handle the errors, if there are any. If not, you can complete the customer\u2019s order using ",(0,r.kt)("inlineCode",{parentName:"p"},"complete")," from Adminfirstly\u2019s client. This request expects the cart ID which you should have access to as well."),(0,r.kt)("p",null,"If you run your server and storefront now, you\u2019ll see the Stripe UI element and you\u2019ll be able to make orders."),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://i.imgur.com/NOi8THw.png",alt:"Stripe Form"})),(0,r.kt)("h2",{id:"capturing-payment"},"Capturing Payment"),(0,r.kt)("p",null,"After the customer places an order, you\u2019ll be able to see the order on the admin panel. In the payment information under the \u201cPayment\u201d section, you should see a \u201cCapture\u201d button."),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://i.imgur.com/Iz55PVZ.png",alt:"Capture Payment"})),(0,r.kt)("p",null,"Clicking this button allows you to capture the payment for an order. You can also refund payments if an order has captured payments."),(0,r.kt)("p",null,"Refunding or Capturing payments is reflected in your Stripe\u2019s dashboard as well. This gives you access to all of Stripe\u2019s analytical capabilities."),(0,r.kt)("h2",{id:"whats-next-"},"What\u2019s Next \ud83d\ude80"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Check out ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/adminfirstly/adminfirstly/tree/master/packages"},"more plugins")," you can add to your store.")))}y.isMDXComponent=!0}}]);