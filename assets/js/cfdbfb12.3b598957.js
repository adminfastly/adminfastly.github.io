"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[9865],{3905:function(e,t,r){r.d(t,{Zo:function(){return d},kt:function(){return m}});var n=r(7294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var l=n.createContext({}),u=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},d=function(e){var t=u(e.components);return n.createElement(l.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,a=e.originalType,l=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),p=u(r),m=i,y=p["".concat(l,".").concat(m)]||p[m]||c[m]||a;return r?n.createElement(y,o(o({ref:t},d),{},{components:r})):n.createElement(y,o({ref:t},d))}));function m(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=r.length,o=new Array(a);o[0]=p;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:i,o[1]=s;for(var u=2;u<a;u++)o[u]=r[u];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}p.displayName="MDXCreateElement"},2265:function(e,t,r){r.r(t),r.d(t,{assets:function(){return d},contentTitle:function(){return l},default:function(){return m},frontMatter:function(){return s},metadata:function(){return u},toc:function(){return c}});var n=r(3117),i=r(102),a=(r(7294),r(3905)),o=["components"],s={title:"Creating your Adminfirstly server"},l="Creating your Adminfirstly server",u={unversionedId:"tutorial/creating-your-medusa-server",id:"tutorial/creating-your-medusa-server",title:"Creating your Adminfirstly server",description:"Introduction",source:"@site/../../docs/content/tutorial/1-creating-your-medusa-server.md",sourceDirName:"tutorial",slug:"/tutorial/creating-your-medusa-server",permalink:"/tutorial/creating-your-medusa-server",editUrl:"https://github.com/medusajs/medusa/edit/master/www/../../docs/content/tutorial/1-creating-your-medusa-server.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"Creating your Adminfirstly server"},sidebar:"tutorialSidebar",previous:{title:"Set up your development environment",permalink:"/tutorial/set-up-your-development-environment"},next:{title:"Adminfirstly Admin Quickstart",permalink:"/admin/quickstart"}},d={},c=[{value:"Introduction",id:"introduction",level:2},{value:"Setup a Adminfirstly project",id:"setup-a-adminfirstly-project",level:2},{value:"Starting your Adminfirstly server",id:"starting-your-adminfirstly-server",level:2},{value:"Browse the API reference",id:"browse-the-api-reference",level:3},{value:"Setup Stripe as a payment provider (Guide coming soon)",id:"setup-stripe-as-a-payment-provider-guide-coming-soon",level:3},{value:"Summary",id:"summary",level:2}],p={toc:c};function m(e){var t=e.components,r=(0,i.Z)(e,o);return(0,a.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"creating-your-adminfirstly-server"},"Creating your Adminfirstly server"),(0,a.kt)("h2",{id:"introduction"},"Introduction"),(0,a.kt)("p",null,"With the required software installed on your computer you are ready to start working on your first Adminfirstly project."),(0,a.kt)("p",null,"In this part of the tutorial we will setup the skeleton for a Adminfirstly store and will be making the first requests to your Adminfirstly server."),(0,a.kt)("p",null,"Once you have completed this part of the tutorial you will have a powerful backend for digital commerce experiences. The server will be capable of handling orders, ensuring payments are going through, keeping basic product and customer data in sync, etc. You can use one of the frontend starters to quickly hook up your server to a presentation layer (",(0,a.kt)("a",{parentName:"p",href:"https://github.com/adminfirstly/gatsby-starter-adminfirstly"},"Gatsby")," or ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/adminfirstly/nextjs-starter-adminfirstly"},"Next"),")."),(0,a.kt)("h2",{id:"setup-a-adminfirstly-project"},"Setup a Adminfirstly project"),(0,a.kt)("p",null,"With Adminfirstly CLI installed it is very easy to setup a new Adminfirstly project, with the ",(0,a.kt)("inlineCode",{parentName:"p"},"new")," command. In your command line run:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"adminfirstly new my-adminfirstly-server --seed\n")),(0,a.kt)("p",null,"The command will do a number of things:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"build a new project in a folder called my-adminfirstly-server"),(0,a.kt)("li",{parentName:"ul"},"install the dependencies through yarn or npm"),(0,a.kt)("li",{parentName:"ul"},"setup a new git environment for version controlling your project"),(0,a.kt)("li",{parentName:"ul"},"create a database in postgres with the name my-adminfirstly-server"),(0,a.kt)("li",{parentName:"ul"},"the ",(0,a.kt)("inlineCode",{parentName:"li"},"--seed")," flag indicates that the database should be populated with some test data after the project has been set up")),(0,a.kt)("p",null,"If you navigate to the root folder of your new project you will see the following files in your directory:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},".\n\u251c\u2500\u2500 node_modules\n\u251c\u2500\u2500 src\n\u2502   \u251c\u2500\u2500 api\n\u2502   \u2514\u2500\u2500 services\n\u251c\u2500\u2500 .babelrc\n\u251c\u2500\u2500 .gitignore\n\u251c\u2500\u2500 adminfirstly-config.js\n\u251c\u2500\u2500 README.md\n\u2514\u2500\u2500 package.json\n")),(0,a.kt)("p",null,"There is not a lot of files needed to get your Adminfirstly store setup and this is all due to the fact that the main Adminfirstly core (",(0,a.kt)("inlineCode",{parentName:"p"},"@adminfirstly/adminfirstly"),") is installed as a dependency in your project giving you all the fundamental needs for a digital commerce experience."),(0,a.kt)("p",null,"Much of Adminfirstly's power lies in the ",(0,a.kt)("inlineCode",{parentName:"p"},"adminfirstly-config.js")," which is the file that configures your store and orchestrates the plugins that you wish to use together with your store. There are some different types of plugin categories such as payment plugins, notification plugins and fulfillment plugins, but plugins can contain any form of extension that enhances your store."),(0,a.kt)("p",null,"For customizations that are more particular to your project you can extend your Adminfirstly server by adding files in the ",(0,a.kt)("inlineCode",{parentName:"p"},"api")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"services")," directories. More about customizing your server will follow in the following parts."),(0,a.kt)("h2",{id:"starting-your-adminfirstly-server"},"Starting your Adminfirstly server"),(0,a.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,a.kt)("div",{parentName:"div",className:"admonition-heading"},(0,a.kt)("h5",{parentName:"div"},(0,a.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,a.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,a.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,a.kt)("div",{parentName:"div",className:"admonition-content"},(0,a.kt)("p",{parentName:"div"},"For your server to run correctly you should configure your ",(0,a.kt)("inlineCode",{parentName:"p"},"COOKIE_SECRET")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"JWT_SECRET")," environment variables by adding a ",(0,a.kt)("inlineCode",{parentName:"p"},".env")," file to the root of your Adminfirstly project."))),(0,a.kt)("p",null,"After your project has been set up with ",(0,a.kt)("inlineCode",{parentName:"p"},"adminfirstly new"),", you can run the following commands to start your server:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"cd my-adminfirstly-server\nadminfirstly develop\n")),(0,a.kt)("p",null,"If you ran the new command with the ",(0,a.kt)("inlineCode",{parentName:"p"},"--seed")," flag you will already have products available in your store. To view these you can run the following command in your command line:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"curl -X GET localhost:9000/store/products | python -m json.tool\n")),(0,a.kt)("h3",{id:"browse-the-api-reference"},"Browse the API reference"),(0,a.kt)("p",null,"In the API reference docs you can find all the available requests that are exposed by your new Adminfirstly server. Interacting with the API is the first step to creating truly unique experiences."),(0,a.kt)("h3",{id:"setup-stripe-as-a-payment-provider-guide-coming-soon"},"Setup Stripe as a payment provider (Guide coming soon)"),(0,a.kt)("p",null,"One of the first things you may want to do when building out your store would be to add a payment provider. Your starter project comes with a dummy payment provider that simply fakes payments being processed. In the real world you want a payment provider that can handle credit card information securely and make sure that funds are being transferred to your account. Stripe is one of the most popular payment providers and Adminfirstly has an official plugin that you can easily install in your project."),(0,a.kt)("h2",{id:"summary"},"Summary"),(0,a.kt)("p",null,"In this part of the tutorial we have setup your first Adminfirstly project using the ",(0,a.kt)("inlineCode",{parentName:"p"},"adminfirstly new")," command. You have now reached a key milestone as you are ready to start building your Adminfirstly store; from here there are no limits to how you can use Adminfirstly as you can customize and extend the functionality of the core. In the next part of the tutorial we will be exploring how you can add custom services and endpoints to fit your exact needs."))}m.isMDXComponent=!0}}]);