"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[2678],{3905:function(e,t,r){r.d(t,{Zo:function(){return c},kt:function(){return m}});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),u=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},c=function(e){var t=u(e.components);return n.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),p=u(r),m=a,k=p["".concat(s,".").concat(m)]||p[m]||d[m]||o;return r?n.createElement(k,i(i({ref:t},c),{},{components:r})):n.createElement(k,i({ref:t},c))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=p;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var u=2;u<o;u++)i[u]=r[u];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}p.displayName="MDXCreateElement"},1031:function(e,t,r){r.r(t),r.d(t,{assets:function(){return c},contentTitle:function(){return s},default:function(){return m},frontMatter:function(){return l},metadata:function(){return u},toc:function(){return d}});var n=r(3117),a=r(102),o=(r(7294),r(3905)),i=["components"],l={},s="Quickstart w. Docker",u={unversionedId:"quickstart/quick-start-docker",id:"quickstart/quick-start-docker",title:"Quickstart w. Docker",description:"This quick start is intended for developers, that have already configured their local development environment and familiarised them selves with all the technologies and frameworks used throughout the Adminfirstly eco-system.",source:"@site/../../docs/content/quickstart/quick-start-docker.md",sourceDirName:"quickstart",slug:"/quickstart/quick-start-docker",permalink:"/quickstart/quick-start-docker",editUrl:"https://github.com/medusajs/medusa/edit/master/www/../../docs/content/quickstart/quick-start-docker.md",tags:[],version:"current",frontMatter:{}},c={},d=[{value:"Introduction",id:"introduction",level:2},{value:"Get started",id:"get-started",level:2},{value:"Try it out",id:"try-it-out",level:2},{value:"What&#39;s next?",id:"whats-next",level:2}],p={toc:d};function m(e){var t=e.components,r=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"quickstart-w-docker"},"Quickstart w. Docker"),(0,o.kt)("p",null,"This quick start is intended for developers, that have already configured their local development environment and familiarised them selves with all the technologies and frameworks used throughout the Adminfirstly eco-system."),(0,o.kt)("p",null,"If this is not the case, please head over to our Getting Started tutorial for a thorough walkthrough."),(0,o.kt)("h2",{id:"introduction"},"Introduction"),(0,o.kt)("p",null,"With all the tools and technologies in place, let's get started by setting up a default project. Our starter is shipped with a very basic configuration, that includes the following plugins:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Stripe as payment provider"),(0,o.kt)("li",{parentName:"ul"},"SendGrid as email notification provider"),(0,o.kt)("li",{parentName:"ul"},"Manual fulfilment as fulfilment provider")),(0,o.kt)("p",null,"Additionally, we will spin up a PostgreSQL database and a Redis server, both required for Adminfirstly to run. In this quick start, we will use docker to seamlessly set up these resources."),(0,o.kt)("h2",{id:"get-started"},"Get started"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Clone our starter project from Github")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"git clone https://github.com/adminfirstly/adminfirstly-starter-default.git my-adminfirstly-starter\n")),(0,o.kt)("ol",{start:2},(0,o.kt)("li",{parentName:"ol"},"Once cloned, we will jump into our project directory and get started with our configuration.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"cd my-adminfirstly-starter\n")),(0,o.kt)("ol",{start:3},(0,o.kt)("li",{parentName:"ol"},"Get your environment variables ready using our template")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"mv .env.template .env\n")),(0,o.kt)("ol",{start:4},(0,o.kt)("li",{parentName:"ol"},"Setup accounts for included plugins. This step is optional but required for placing orders.")),(0,o.kt)("p",null,"Create a Stripe account and add your API key and webhook secret to ",(0,o.kt)("inlineCode",{parentName:"p"},".env"),"\nCreate a SendGrid account and add your API key to ",(0,o.kt)("inlineCode",{parentName:"p"},".env")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'...\nSTRIPE_API_KEY="some_stripe_key"\nSTRIPE_WEBHOOK_SECRET="some_webhook_secret"\nSENDGRID_API_KEY="some_sendgrid_key"\n..\n')),(0,o.kt)("ol",{start:5},(0,o.kt)("li",{parentName:"ol"},"Start your server")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"docker-compose up --build\n")),(0,o.kt)("p",null,"We will use docker-compose and Docker to start up our development environment. Running the above command will do the following:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Build images for our Adminfirstly project, a PostgreSQL database and a Redis server")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Run migrations for our newly created database")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Seed our database with some entities, that will allow us to easily get started."),(0,o.kt)("p",{parentName:"li"},"These include:"),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"A user with email ",(0,o.kt)("inlineCode",{parentName:"li"},"admin@adminfirstly-test.com")," and password ",(0,o.kt)("inlineCode",{parentName:"li"},"supersecret")),(0,o.kt)("li",{parentName:"ul"},"A region called Default Region with a small subset of countries"),(0,o.kt)("li",{parentName:"ul"},"A shipping option called Standard Shipping, that costs 10 EUR"),(0,o.kt)("li",{parentName:"ul"},"A product called Cool Test Product"),(0,o.kt)("li",{parentName:"ul"},"A variant of that product that costs 195 EUR")))),(0,o.kt)("p",null,"Once done, our server will be accessible at ",(0,o.kt)("inlineCode",{parentName:"p"},"http://localhost:9000"),"."),(0,o.kt)("h2",{id:"try-it-out"},"Try it out"),(0,o.kt)("p",null,"Let's try out our Adminfirstly server by fetching some products."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"curl -X GET localhost:9000/store/products | python -m json.tool\n")),(0,o.kt)("h2",{id:"whats-next"},"What's next?"),(0,o.kt)("p",null,"Add custom endpoint to your Adminfirstly project"),(0,o.kt)("p",null,"Install and configure additional plugins"),(0,o.kt)("p",null,"Build a storefront using our ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/adminfirstly/gatsby-starter-adminfirstly"},"Gatsby Starter")))}m.isMDXComponent=!0}}]);